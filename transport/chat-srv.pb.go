// Code generated by protoc-gen-go. DO NOT EDIT.
// source: transport/chat-srv.proto

package transport

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventType int32

const (
	EventType_READ       EventType = 0
	EventType_WRITING    EventType = 1
	EventType_USERSTATUS EventType = 2
	EventType_MESSAGE    EventType = 3
	EventType_OUTROOM    EventType = 4
	EventType_INROOM     EventType = 5
)

var EventType_name = map[int32]string{
	0: "READ",
	1: "WRITING",
	2: "USERSTATUS",
	3: "MESSAGE",
	4: "OUTROOM",
	5: "INROOM",
}

var EventType_value = map[string]int32{
	"READ":       0,
	"WRITING":    1,
	"USERSTATUS": 2,
	"MESSAGE":    3,
	"OUTROOM":    4,
	"INROOM":     5,
}

func (x EventType) String() string {
	return proto.EnumName(EventType_name, int32(x))
}

func (EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{0}
}

type UserStatus int32

const (
	UserStatus_ONLINE      UserStatus = 0
	UserStatus_DONTDISTURB UserStatus = 1
	UserStatus_NOTHERE     UserStatus = 2
)

var UserStatus_name = map[int32]string{
	0: "ONLINE",
	1: "DONTDISTURB",
	2: "NOTHERE",
}

var UserStatus_value = map[string]int32{
	"ONLINE":      0,
	"DONTDISTURB": 1,
	"NOTHERE":     2,
}

func (x UserStatus) String() string {
	return proto.EnumName(UserStatus_name, int32(x))
}

func (UserStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{1}
}

type UserInfo struct {
	Id                   string   `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Room struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Room) Reset()         { *m = Room{} }
func (m *Room) String() string { return proto.CompactTextString(m) }
func (*Room) ProtoMessage()    {}
func (*Room) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{1}
}

func (m *Room) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Room.Unmarshal(m, b)
}
func (m *Room) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Room.Marshal(b, m, deterministic)
}
func (m *Room) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Room.Merge(m, src)
}
func (m *Room) XXX_Size() int {
	return xxx_messageInfo_Room.Size(m)
}
func (m *Room) XXX_DiscardUnknown() {
	xxx_messageInfo_Room.DiscardUnknown(m)
}

var xxx_messageInfo_Room proto.InternalMessageInfo

func (m *Room) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type Event struct {
	Type                 EventType  `protobuf:"varint,1,opt,name=type,proto3,enum=transport.EventType" json:"type,omitempty"`
	Msg                  *Msg       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Room                 *Room      `protobuf:"bytes,3,opt,name=room,proto3" json:"room,omitempty"`
	UserStatus           UserStatus `protobuf:"varint,4,opt,name=userStatus,proto3,enum=transport.UserStatus" json:"userStatus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{2}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetType() EventType {
	if m != nil {
		return m.Type
	}
	return EventType_READ
}

func (m *Event) GetMsg() *Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *Event) GetRoom() *Room {
	if m != nil {
		return m.Room
	}
	return nil
}

func (m *Event) GetUserStatus() UserStatus {
	if m != nil {
		return m.UserStatus
	}
	return UserStatus_ONLINE
}

type Msg struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{3}
}

func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Msg) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Status struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{4}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

type Get struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Get) Reset()         { *m = Get{} }
func (m *Get) String() string { return proto.CompactTextString(m) }
func (*Get) ProtoMessage()    {}
func (*Get) Descriptor() ([]byte, []int) {
	return fileDescriptor_f3944f47fb55b982, []int{5}
}

func (m *Get) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Get.Unmarshal(m, b)
}
func (m *Get) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Get.Marshal(b, m, deterministic)
}
func (m *Get) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Get.Merge(m, src)
}
func (m *Get) XXX_Size() int {
	return xxx_messageInfo_Get.Size(m)
}
func (m *Get) XXX_DiscardUnknown() {
	xxx_messageInfo_Get.DiscardUnknown(m)
}

var xxx_messageInfo_Get proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("transport.EventType", EventType_name, EventType_value)
	proto.RegisterEnum("transport.UserStatus", UserStatus_name, UserStatus_value)
	proto.RegisterType((*UserInfo)(nil), "transport.UserInfo")
	proto.RegisterType((*Room)(nil), "transport.Room")
	proto.RegisterType((*Event)(nil), "transport.Event")
	proto.RegisterType((*Msg)(nil), "transport.Msg")
	proto.RegisterType((*Status)(nil), "transport.Status")
	proto.RegisterType((*Get)(nil), "transport.Get")
}

func init() { proto.RegisterFile("transport/chat-srv.proto", fileDescriptor_f3944f47fb55b982) }

var fileDescriptor_f3944f47fb55b982 = []byte{
	// 404 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x86, 0x37, 0x89, 0x5b, 0xda, 0xa9, 0xd4, 0x35, 0x23, 0x40, 0x51, 0x4f, 0x55, 0xb8, 0x94,
	0x22, 0xca, 0xaa, 0x08, 0xee, 0x85, 0x46, 0xc5, 0x12, 0x49, 0x90, 0xed, 0x08, 0xae, 0x81, 0x9a,
	0x76, 0xb5, 0xdb, 0xba, 0x8a, 0xdd, 0x15, 0x7d, 0x0c, 0x9e, 0x84, 0x57, 0x44, 0x36, 0x28, 0x84,
	0xb2, 0x37, 0x67, 0xbe, 0xcf, 0xbf, 0x67, 0x34, 0x81, 0xd8, 0xd6, 0xd5, 0xde, 0x1c, 0x74, 0x6d,
	0x5f, 0x7e, 0xdd, 0x56, 0xf6, 0x85, 0xa9, 0xef, 0x66, 0x87, 0x5a, 0x5b, 0x8d, 0xfd, 0x86, 0x24,
	0x23, 0xe8, 0x95, 0x46, 0xd5, 0x6c, 0xff, 0x4d, 0xe3, 0x10, 0x42, 0xb6, 0x8e, 0x83, 0x71, 0x30,
	0xe9, 0xf3, 0x90, 0xad, 0x93, 0x27, 0x40, 0xb8, 0xd6, 0x3b, 0x57, 0xbf, 0x6e, 0xea, 0xd7, 0xeb,
	0xe4, 0x67, 0x00, 0x9d, 0xf4, 0x4e, 0xed, 0x2d, 0x4e, 0x80, 0xd8, 0xd3, 0x41, 0x79, 0x36, 0x9c,
	0x3f, 0x9a, 0x35, 0xb9, 0x33, 0xcf, 0xe5, 0xe9, 0xa0, 0xb8, 0x37, 0x70, 0x0c, 0xd1, 0xce, 0x6c,
	0xe2, 0x70, 0x1c, 0x4c, 0x06, 0xf3, 0x61, 0x4b, 0xcc, 0xcc, 0x86, 0x3b, 0x84, 0x4f, 0x81, 0xd4,
	0x5a, 0xef, 0xe2, 0xc8, 0x2b, 0x97, 0x2d, 0xc5, 0x35, 0xc1, 0x3d, 0xc4, 0xd7, 0x00, 0x47, 0xa3,
	0x6a, 0x61, 0x2b, 0x7b, 0x34, 0x31, 0xf1, 0xcf, 0x3e, 0x6e, 0xa9, 0x65, 0x03, 0x79, 0x4b, 0x4c,
	0x9e, 0x41, 0x94, 0x99, 0xcd, 0xf9, 0x20, 0x88, 0x40, 0xac, 0xfa, 0x6e, 0x7d, 0x57, 0x7d, 0xee,
	0xcf, 0x49, 0x0c, 0xdd, 0xdf, 0x97, 0x9c, 0xad, 0x6f, 0xbc, 0xdd, 0xe3, 0xa1, 0xbe, 0x49, 0x3a,
	0x10, 0xad, 0x94, 0x9d, 0x7e, 0x86, 0x7e, 0x33, 0x1c, 0xf6, 0x80, 0xf0, 0x74, 0xb1, 0xa4, 0x17,
	0x38, 0x80, 0x07, 0x9f, 0x38, 0x93, 0x2c, 0x5f, 0xd1, 0x00, 0x87, 0x00, 0xa5, 0x48, 0xb9, 0x90,
	0x0b, 0x59, 0x0a, 0x1a, 0x3a, 0x98, 0xa5, 0x42, 0x2c, 0x56, 0x29, 0x8d, 0xdc, 0x47, 0x51, 0x4a,
	0x5e, 0x14, 0x19, 0x25, 0x08, 0xd0, 0x65, 0xb9, 0x3f, 0x77, 0xa6, 0x6f, 0x00, 0xfe, 0xf6, 0xef,
	0x48, 0x91, 0x7f, 0x60, 0x79, 0x4a, 0x2f, 0xf0, 0x12, 0x06, 0xcb, 0x22, 0x97, 0x4b, 0x26, 0x64,
	0xc9, 0xdf, 0xd2, 0xc0, 0x65, 0xe4, 0x85, 0x7c, 0x9f, 0xf2, 0x94, 0x86, 0xf3, 0x1f, 0x01, 0x90,
	0x77, 0xdb, 0xca, 0xe2, 0x73, 0x20, 0x1f, 0x8f, 0x66, 0x8b, 0xf4, 0x7c, 0x11, 0xa3, 0x87, 0xad,
	0xca, 0x9f, 0xfc, 0x2b, 0x18, 0x08, 0xb5, 0x5f, 0x67, 0xca, 0x98, 0x6a, 0xa3, 0xf0, 0x6c, 0x27,
	0xf7, 0xdd, 0x98, 0xba, 0xf8, 0xdb, 0xdb, 0x7f, 0xd4, 0x95, 0xb2, 0xa3, 0xff, 0x9e, 0xbb, 0x0a,
	0xbe, 0x74, 0xfd, 0x9f, 0xf6, 0xea, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xf9, 0x05, 0x43,
	0x85, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatClient is the client API for Chat service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatClient interface {
	Push(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Status, error)
	SendMessage(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Status, error)
	Pull(ctx context.Context, in *Get, opts ...grpc.CallOption) (Chat_PullClient, error)
}

type chatClient struct {
	cc *grpc.ClientConn
}

func NewChatClient(cc *grpc.ClientConn) ChatClient {
	return &chatClient{cc}
}

func (c *chatClient) Push(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/transport.Chat/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) SendMessage(ctx context.Context, in *Msg, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/transport.Chat/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatClient) Pull(ctx context.Context, in *Get, opts ...grpc.CallOption) (Chat_PullClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Chat_serviceDesc.Streams[0], "/transport.Chat/Pull", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatPullClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Chat_PullClient interface {
	Recv() (*Event, error)
	grpc.ClientStream
}

type chatPullClient struct {
	grpc.ClientStream
}

func (x *chatPullClient) Recv() (*Event, error) {
	m := new(Event)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatServer is the server API for Chat service.
type ChatServer interface {
	Push(context.Context, *Event) (*Status, error)
	SendMessage(context.Context, *Msg) (*Status, error)
	Pull(*Get, Chat_PullServer) error
}

// UnimplementedChatServer can be embedded to have forward compatible implementations.
type UnimplementedChatServer struct {
}

func (*UnimplementedChatServer) Push(ctx context.Context, req *Event) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Push not implemented")
}
func (*UnimplementedChatServer) SendMessage(ctx context.Context, req *Msg) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}
func (*UnimplementedChatServer) Pull(req *Get, srv Chat_PullServer) error {
	return status.Errorf(codes.Unimplemented, "method Pull not implemented")
}

func RegisterChatServer(s *grpc.Server, srv ChatServer) {
	s.RegisterService(&_Chat_serviceDesc, srv)
}

func _Chat_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Chat/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).Push(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Msg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/transport.Chat/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatServer).SendMessage(ctx, req.(*Msg))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chat_Pull_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Get)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatServer).Pull(m, &chatPullServer{stream})
}

type Chat_PullServer interface {
	Send(*Event) error
	grpc.ServerStream
}

type chatPullServer struct {
	grpc.ServerStream
}

func (x *chatPullServer) Send(m *Event) error {
	return x.ServerStream.SendMsg(m)
}

var _Chat_serviceDesc = grpc.ServiceDesc{
	ServiceName: "transport.Chat",
	HandlerType: (*ChatServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _Chat_Push_Handler,
		},
		{
			MethodName: "SendMessage",
			Handler:    _Chat_SendMessage_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Pull",
			Handler:       _Chat_Pull_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "transport/chat-srv.proto",
}
